import math

#Kaitlyn Peterson
#test file for expectations of RSA key


# testing modulus = prime1 * prime 2
if (4384504289447288069031423042810931328464448565132466056537631816112405870917690401528026931197912271926257857863106518419797793786693756302322609654961052152458811947134179926154416760809121444350705336805685143769937713354960954696408125587811865022527037189256146740289261078087174052702617491225180177500929570508179279494680264498342187178758008220576122685813698127573687003602536599446406342251848227097894297372365712292203512321597120656362476974018268986511111571518411845887908379603743493684798017075292794273616939122658495429549907553166686359016972706318177344242925158150909648770803898656049466471527352966338622702546072932235200448578055363704850487067001011818856218355527072567451598150264634135970459447085214009404775027292206416592340365035450299598359389104738457508830582374864417098540081009005557209324299990630363149117720847037082165048328005381355137685722945575071846578675422247407765856201503
 == (1898239308458580805418830228772217229143072811461360961172525391257590592394059940941395906121978223988307399069510453048757948567582554215628246237951756466087823492386058849979872339765711379671783776253206068723337084505548423216672972045614462861314643746997666709266695421339273235998159422191822173055983901747131972960753857133102219915074970345287677596797483914222984311896796488651148923750965921273971464472039299646716880357370320217431804863700084027 * 2309774257602756337845402151191252329109496542206635778240356410973443052601308753842156297787828172662654997983120785123494191031154260600556906334167133037247799100182969706558961064684574045608846208904240273962086024881109815631422064934885687196963115536355720822713958911055988986931551198066279465653523698013297093633249056576681434302379972082141918584643037273353318223638038583032231861952481546178823142220941440962169136622515892209565338442634945389)):
  print("n=pq holds")
else:
  print("n=pq failed")

# calculating lambda(n) using the equation: λ(n) = lcm(prime1 - 1, prime2 - 1)
lambdan = math.lcm(1898239308458580805418830228772217229143072811461360961172525391257590592394059940941395906121978223988307399069510453048757948567582554215628246237951756466087823492386058849979872339765711379671783776253206068723337084505548423216672972045614462861314643746997666709266695421339273235998159422191822173055983901747131972960753857133102219915074970345287677596797483914222984311896796488651148923750965921273971464472039299646716880357370320217431804863700084026, 2309774257602756337845402151191252329109496542206635778240356410973443052601308753842156297787828172662654997983120785123494191031154260600556906334167133037247799100182969706558961064684574045608846208904240273962086024881109815631422064934885687196963115536355720822713958911055988986931551198066279465653523698013297093633249056576681434302379972082141918584643037273353318223638038583032231861952481546178823142220941440962169136622515892209565338442634945388)

# testing gcd(publicExponent, λ(n)) = 1
if (math.gcd(65537, lambdan) == 1):
  print("gcd e and lambda n = 1 holds")
else:
  print("gcd e and lambda n = 1 failed")

# testing publicExponent*privateExponent mod λ(n) = 1
if ((65537 * 3085818092844594079437178812726463028906155150018081341193497833562487156813379766704002963234565261495012644673021166091111482649667355988901389601829173299543200040611624717241748525143365223014118492762290420012945008598159421935270531039532207366282551693767486586139770926755434383339308051677089822348144962993267456043031069471993429415753133789677184779333152663904913454097181754573225697489456329628917626169955421814820437399235045703567744181555345176140659406163046380800418931037545741669767415347994728633465190489741615061363938523253551474279228841010198299442895802746246678331595074980089403726374732047801652347658505022287529798758679258767233216789796074049831737980643290870655114501907850702046027394018731153029802499387872321473661289536018731295852539369598313993780852774304140539862089679879418608359301770158399815505549425113244034535295985291724857897329909513445164200220572438751364807880473) % lambdan == 1):
  print("ed mod lambdan = 1 holds")
else:
  print("ed mod lambdan = 1 failed")

# testing exponent1 = privateExponent mod (prime1 - 1)
if (1620193667642039025391625834145796432877499207192597362733836223337353717306784941679932971689339593290430030551933192134399674319745983399731472925034671603145071828654215181961670493074363389393537529480092613856463625887811455122939770619980010164206347320167368691593808155700670914418272733361382628371120709238587068242581936614227416822782698271024705727369654797951163343742683853404561254342089646449893627585011504683947653686828479801729224309113494277 == (3085818092844594079437178812726463028906155150018081341193497833562487156813379766704002963234565261495012644673021166091111482649667355988901389601829173299543200040611624717241748525143365223014118492762290420012945008598159421935270531039532207366282551693767486586139770926755434383339308051677089822348144962993267456043031069471993429415753133789677184779333152663904913454097181754573225697489456329628917626169955421814820437399235045703567744181555345176140659406163046380800418931037545741669767415347994728633465190489741615061363938523253551474279228841010198299442895802746246678331595074980089403726374732047801652347658505022287529798758679258767233216789796074049831737980643290870655114501907850702046027394018731153029802499387872321473661289536018731295852539369598313993780852774304140539862089679879418608359301770158399815505549425113244034535295985291724857897329909513445164200220572438751364807880473
 % 2309774257602756337845402151191252329109496542206635778240356410973443052601308753842156297787828172662654997983120785123494191031154260600556906334167133037247799100182969706558961064684574045608846208904240273962086024881109815631422064934885687196963115536355720822713958911055988986931551198066279465653523698013297093633249056576681434302379972082141918584643037273353318223638038583032231861952481546178823142220941440962169136622515892209565338442634945388)):
  print("exponent1 = d mod (p-1) holds")
else:
  print("exponent1 = d mod (p-1) failed")

# testing exponent2 = privateExponent mod (prime2 - 1)
if (147631502131824562693131783207226318216308987595076930880210597360879186557708218547969771785460472827080928529796828954476391410180024701116272808868884793439578197669892457060094440022976805502038267048577007374198530902006199751825413713116207900943295225268887913959020805996098016141761425987025918428770769904101983096280916273363474295545068035612421879409749843764507851103010081368614768212745064631176778833544170625742953433656049592569844658594066379 == (3085818092844594079437178812726463028906155150018081341193497833562487156813379766704002963234565261495012644673021166091111482649667355988901389601829173299543200040611624717241748525143365223014118492762290420012945008598159421935270531039532207366282551693767486586139770926755434383339308051677089822348144962993267456043031069471993429415753133789677184779333152663904913454097181754573225697489456329628917626169955421814820437399235045703567744181555345176140659406163046380800418931037545741669767415347994728633465190489741615061363938523253551474279228841010198299442895802746246678331595074980089403726374732047801652347658505022287529798758679258767233216789796074049831737980643290870655114501907850702046027394018731153029802499387872321473661289536018731295852539369598313993780852774304140539862089679879418608359301770158399815505549425113244034535295985291724857897329909513445164200220572438751364807880473
% 1898239308458580805418830228772217229143072811461360961172525391257590592394059940941395906121978223988307399069510453048757948567582554215628246237951756466087823492386058849979872339765711379671783776253206068723337084505548423216672972045614462861314643746997666709266695421339273235998159422191822173055983901747131972960753857133102219915074970345287677596797483914222984311896796488651148923750965921273971464472039299646716880357370320217431804863700084026)):
  print("exponent2 = d mod (q-1) holds")
else:
  print("exponent2 = d mod (q-1) failed")
